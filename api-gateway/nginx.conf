# # Cấu hình các tiến trình worker và số lượng kết nối
# worker_processes auto;
# events {
#     worker_connections 1024;
# }

# # Khối HTTP chứa tất cả cấu hình cho web server
# http {
#     # -- Định nghĩa các nhóm server (upstream) cho mỗi microservice --
#     # Tên của upstream (ví dụ: users_api) sẽ được dùng ở dưới.
#     # Tên service (ví dụ: user-service) phải khớp với tên service trong docker-compose.yml
#     # Docker sẽ tự động phân giải tên service thành IP của container.

#     upstream user_service_upstream {
#         server user-service:3000; # Tên service:cổng trong của container
#     }

#     upstream product_service_upstream {
#         server product-service:3000;
#     }

#     upstream order_service_upstream {
#         server order-service:3000;
#     }

#     upstream payment_service_upstream {
#         server payment-service:3000;
#     }

#     # -- Cấu hình server chính để lắng nghe request từ bên ngoài --
#     server {
#         listen 80; # Lắng nghe trên cổng 80 (cổng HTTP mặc định)
#         server_name localhost;

#         # Cấu hình proxy chung để chuyển tiếp các header quan trọng
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;

#         # -- Định tuyến các request dựa trên đường dẫn URL --

#         # Route cho User Service (đăng nhập, đăng ký, thông tin user)
#         location /api/auth {
#             proxy_pass http://user_service_upstream;
#         }
#         location /api/users {
#             proxy_pass http://user_service_upstream;
#         }

#         # Route cho Product Service
#         location /api/products {
#             proxy_pass http://product_service_upstream;
#         }

#         # Route cho Order Service (giỏ hàng và đơn hàng)
#         location /api/carts {
#             proxy_pass http://order_service_upstream;
#         }
#         location /api/orders {
#             proxy_pass http://order_service_upstream;
#         }

#         # Route cho Payment Service
#         location /api/payments {
#             proxy_pass http://payment_service_upstream;
#         }

#         # Một trang mặc định để kiểm tra Nginx có chạy hay không
#         location / {
#             return 200 'API Gateway is running successfully!';
#             add_header Content-Type text/plain;
#         }
#     }
# }
# api-gateway/nginx.conf

user nginx;
worker_processes auto;
pid /var/run/nginx.pid;

events {
    worker_connections 768;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Tải tất cả các file cấu hình .conf trong thư mục conf.d
    include /etc/nginx/conf.d/*.conf;
}